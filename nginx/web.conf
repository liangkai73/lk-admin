server {
    listen  80;
    server_name  xxx.com www.xxx.com;

    return  301 https://$server_name$request_uri;
}

server {
    listen  443 ssl;
    server_name xxx.com;

    return  301 https://www.$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name www.xxx.com;
    access_log  /var/log/nginx/xxx.com/web_ssl_access.log;
    error_log  /var/log/nginx/xxx.com/web_ssl_error.log ;

    ssl_certificate   /etc/nginx/ssl/www.xxx.com.pem;
    ssl_certificate_key  /etc/nginx/ssl/www.xxx.com.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    #access_log  /var/log/nginx/log/host.access.log  main;
    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    # error_page   500 502 503 504  /50x.html;
    location = /50x.html {
    }

    root  /www/xxx.com;

    location / {
        try_files $uri $uri/ /index.html;
        index index.html index.htm;

        # cache.
        if ($request_filename ~* .*\.(?:htm|html)$)
        {
            add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
        }
        if ($request_filename ~* .*\.(?:js|css)$)
        {
            expires      10d;
        }
        if ($request_filename ~* .*\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$)
        {
            expires      10d;
        }
    }
}





